---
title: "COVID-19 Open Research Dataset (CORD-19)"
description: "JSON formatted data"
date: 2020-03-18
date-format: long
---

Notable topics: JSON formatted data

Recorded on: 2020-03-18

Timestamps by: Alex Cookson

[View code](NA)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:0:55

Disclaimer that David's not an epidemiologist

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=55" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:2:55

Overview of dataset

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=175" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:7:50

Using dir function with its full.names argument to get file paths for all files in a folder

dir

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=470" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:9:45

Inspecting JSON-formatted data

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=585" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:10:40

Introducing hoist function as a way to deal with nested lists (typical for JSON data)

hoist

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=640" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:11:40

Continuing to use the hoist function

hoist

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=700" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:13:10

Brief explanation of pluck specification

pluck

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=790" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:16:35

Using object.size function to check size of json data

object.size

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=995" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:17:40

Using map_chr and str_c functions together to combine paragraphs of text in a list into a single character string

map_chr | str_c

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=1060" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:20:00

Using unnest_tokens function from tidytext package to split full paragraphs into individual words

unnest_tokens

tidytext



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=1200" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:22:50

Overview of scispaCy package for Python, which has named entity recognition features

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=1370" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:24:40

Introducting spacyr package, which is a R wrapper around the Python scispaCy package

NA

spacyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=1480" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:28:50

Showing how tidytext can use a custom tokenization function (David uses spacyr package's named entity recognition)

NA

tidytext



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=1730" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:32:20

Demonstrating the tokenize_words function from the tokenizers package

tokenize_words

tokenizers



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=1940" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:37:00

Actually using a custom tokenizer in unnest_tokens function

unnest_tokens

tidytext



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=2220" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:39:45

Using sample_n function to get a random sample of n rows

sample_n

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=2385" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:43:25

Asking, "What are groups of words that tend to occur together?"

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=2605" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:44:30

Using pairwise_cor from widyr package to find correlation between named entities

pairwise_cor

widyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=2670" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:45:40

Using ggraph and igraph packages to create a network plot

NA

ggraph | igraph



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=2740" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:52:05

Starting to look at papers' references

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=3125" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:53:30

Using unnest_longer then unnest_wider function to convert lists into a tibble

unnest_wider

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=3210" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:59:30

Using str_trunc function to truncate long character strings to a certain number of characters

str_trunc

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=3570" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 1:06:25

Using glue function for easy combination of strings and R code

glue

glue



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=3985" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 1:19:15

Summary of screencast

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-5HYdBq_PTM?start=4755" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

