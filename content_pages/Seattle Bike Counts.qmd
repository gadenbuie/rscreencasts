---
title: "Seattle Bike Counts"
description: "NA"
date: 2019-04-05
date-format: long
---

Notable topics: NA

Recorded on: 2019-04-05

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/bike_traffic.Rmd)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:6:15

Using summarise_all / summarise_at function to aggregate multiple variables at the same time

summarise_all | summarise_at

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=375" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:8:15

Using magnitude instead of absolute numbers to see trends in time of day

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=495" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:12:00

Dividing time into categories (four categories for times of day, e.g., morning commute, night) using between function

between

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=720" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:15:00

Looking for systematically missing data (which would bias the results of the analysis)

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=900" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:19:45

Summarising using a filter in the arguments based on whether the time window is during a commute time

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=1185" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:22:45

Combining day of week and hour using functions in the lubridate package and as.difftime function (but then he uses facetting as an easier method)

as.difftime

lubridate



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=1365" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:26:30

Normalizing day of week data to percent of weekly traffic

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=1590" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:42:00

Starting analysis of directions of travel by time of day (commute vs. reverse-commute)

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=2520" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:43:45

Filtering out weekend days using wday function from lubridate package

wday

lubridate



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=2625" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:45:30

Using spread function to create new variable of ratio of bike counts at different commute times

spread

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=2730" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:47:30

Visualizing ratio of bike counts by time of day

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=2850" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:50:15

Visualizing ratio by hour instead of time of day

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=3015" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:52:50

Ordering crossing in graph by when the average trip happened using mean of hour weighted by bike count

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=3170" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:54:50

Quick and dirty filter when creating a new variable within a mutate function

mutate

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/sBho2GJE5lc?start=3290" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

