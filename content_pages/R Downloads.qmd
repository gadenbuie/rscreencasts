---
title: "R Downloads"
description: "Data manipulation (especially time series)"
date: 2018-10-30
date-format: long
---

Notable topics: Data manipulation (especially time series)

Recorded on: 2018-10-30

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/r-downloads.Rmd)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:5:20

Using geom_line function to visualize changes over time

geom_line

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=320" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:7:35

Starting to decompose time series data into day-of-week trend and overall trend (lots of lubridate package functions)

NA

lubridate



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=455" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:9:50

Using floor_date function from lubridate package to round dates down to the week level

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=590" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:10:05

Using min function to drop incomplete/partial week at the start of the dataset

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=605" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:12:20

Using countrycode function from countrycode package to replace two-letter country codes with full names (e.g., "CA" becomes "Canada")

countrycode

countrycode



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=740" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:17:20

Using fct_lump function to get top N categories within a categorical variable and classify the rest as "Other"

fct_lump

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=1040" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:20:30

Using hour function from lubridate package to pull out integer hour value from a datetime variable

hour

lubridate



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=1230" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:22:20

Using facet_wrap function to graph small multiples of downloads by country, then changing scales argument to allow different scales on y-axis

facet_wrap

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=1340" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:31:00

Starting analysis of downloads by IP address

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=1860" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:35:20

Using as.POSIXlt to combine separate date and time variables to get a single datetime variable

as.POSIXlt

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=2120" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:36:35

Using lag function to calculate time between downloads (time between events) per IP address (comparable to SQL window function)

lag

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=2195" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:38:05

Using as.numeric function to convert variable from a time interval object to a numeric variable (number in seconds)

as.numeric

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=2285" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:38:40

Explanation of a bimodal log-normal distribution

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=2320" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:39:05

Handy trick for setting easy-to-interpret intervals for time data on scale_x_log10 function's breaks argument

scale_x_log10

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=2345" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:47:40

Starting to explore package downloads

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=2860" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:52:15

Adding 1 to the numerator and denominator when calculating a ratio to get around dividing by zero

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=3135" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:57:55

Showing how to look at package download data over time using cran_downloads function from the cranlogs package

cran_downloads

cranlogs



<iframe width="560" height="315" src="https://www.youtube.com/embed/nms9F-XubJU?start=3475" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

