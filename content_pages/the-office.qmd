---
title: |
  The Office
description: |
  Text mining (tidytext package), LASSO regression (glmnet package)
date: 2020-03-15
date-format: long
---

Notable topics: Text mining (tidytext package), LASSO regression (glmnet package)

Recorded on: 2020-03-15

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/office-transcripts.Rmd)

## Full screencast

<iframe class="video" src="https://www.youtube.com/embed/_IvAubTDQME" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

<script id="timestamps" type="application-json">[{"timestamp_with_hours":"0:1:45","description":"Overview of transcripts data","timestamp_sec":105},{"timestamp_with_hours":"0:2:25","description":"Overview of ratintgs data","timestamp_sec":145},{"timestamp_with_hours":"0:4:10","description":"Using fct_inorder function to create a factor with levels based on when they appear in the dataframe","functions":"fct_inorder","timestamp_sec":250},{"timestamp_with_hours":"0:4:50","description":"Using theme and element_text to turn axis labels 90 degrees","functions":"theme | element_text","timestamp_sec":290},{"timestamp_with_hours":"0:5:55","description":"Creating a line graph with points at each observation (using geom_line and geom_point)","functions":"geom_line | geom_point","timestamp_sec":355},{"timestamp_with_hours":"0:7:10","description":"Adding text labels to very high and very low-rated episodes","timestamp_sec":430},{"timestamp_with_hours":"0:8:50","description":"Using theme function's panel.grid.major argument to get rid of some extraneous gridlines, using element_blank function","functions":"theme | element_blank","timestamp_sec":530},{"timestamp_with_hours":"0:10:15","description":"Using geom_text_repel from ggrepel package to experiment with different labelling (before abandoning this approach)","functions":"geom_text_repel","packages":"ggrepel","timestamp_sec":615},{"timestamp_with_hours":"0:12:45","description":"Using row_number function to add episode_number field to make graphing easier","functions":"row_number","timestamp_sec":765},{"timestamp_with_hours":"0:14:05","description":"Explanation of why number of ratings (votes) is relevant to interpreting the graph","timestamp_sec":845},{"timestamp_with_hours":"0:19:10","description":"Using unnest_tokens function from tidytext package to split full-sentence text field to individual words","functions":"unnest_tokens","packages":"tidytext","timestamp_sec":1150},{"timestamp_with_hours":"0:20:10","description":"Using anti_join function to filter out stop words (e.g., and, or, the)","functions":"anti_join","timestamp_sec":1210},{"timestamp_with_hours":"0:22:25","description":"Using str_remove_all function to get rid of quotation marks from character names (quirks that might pop up when parsing)","functions":"str_remove_all","timestamp_sec":1345},{"timestamp_with_hours":"0:25:40","description":"Asking, \"Are there words that are specific to certain characters?\" (using bind_tf_idf function)","functions":"bind_tf_idf","packages":"tidytext","timestamp_sec":1540},{"timestamp_with_hours":"0:32:25","description":"Using reorder_within function to re-order factors within a grouping (when a term appears in multiple groups) and scale_x_reordered function to graph","functions":"reorder_within | scale_x_reordered","timestamp_sec":1945},{"timestamp_with_hours":"0:37:05","description":"Asking, \"What effects the popularity of an episode?\"","timestamp_sec":2225},{"timestamp_with_hours":"0:37:55","description":"Dealing with inconsistent episode names between datasets","timestamp_sec":2275},{"timestamp_with_hours":"0:41:25","description":"Using str_remove function and some regex to remove \"(Parts 1&2)\" from some episode names","functions":"str_remove","timestamp_sec":2485},{"timestamp_with_hours":"0:42:45","description":"Using str_to_lower function to further align episode names (addresses inconsistent capitalization)","functions":"str_to_lower","timestamp_sec":2565},{"timestamp_with_hours":"0:52:20","description":"Setting up dataframe of features for a LASSO regression, with director and writer each being a feature with its own line","timestamp_sec":3140},{"timestamp_with_hours":"0:52:55","description":"Using separate_rows function to separate episodes with multiple writers so that each has their own row","functions":"separate_rows","timestamp_sec":3175},{"timestamp_with_hours":"0:58:25","description":"Using log2 function to transform number of lines fields to something more useable (since it is log-normally distributed)","functions":"log2","timestamp_sec":3505},{"timestamp_with_hours":"1:00:20","description":"Using cast_sparse function from tidytext package to create a sparse matrix of features by episode","functions":"cast_sparse","packages":"tidytext","timestamp_sec":3620},{"timestamp_with_hours":"1:01:55","description":"Using semi_join function as a \"filtering join\"","functions":"semi_join","timestamp_sec":3715},{"timestamp_with_hours":"1:02:30","description":"Setting up dataframes (after we have our features) to run LASSO regression","timestamp_sec":3750},{"timestamp_with_hours":"1:03:50","description":"Using cv.glmnet function from glmnet package to run a cross-validated LASSO regression","functions":"cv.glmnet","packages":"glmnet","timestamp_sec":3830},{"timestamp_with_hours":"1:05:35","description":"Explanation of how to pick a lambda penalty parameter","timestamp_sec":3935},{"timestamp_with_hours":"1:05:55","description":"Explanation of output of LASSO model","timestamp_sec":3955},{"timestamp_with_hours":"1:09:25","description":"Outline of why David likes regularized linear models (which is what LASSO is)","timestamp_sec":4165},{"timestamp_with_hours":"1:10:55","description":"Summary of screencast","timestamp_sec":4255}]</script>
