---
title: |
  Chopped
description: |
  Data manipulation, Modeling (Linear Regression, Random Forest, and Natural Spline)
date: 2020-08-24
date-format: long
---

Notable topics: Data manipulation, Modeling (Linear Regression, Random Forest, and Natural Spline)

Recorded on: 2020-08-24

Timestamps by: Eric Fletcher

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/2020_08_25_chopped.Rmd)

## Full screencast

<iframe class="video" src="https://www.youtube.com/embed/6V0vAx2Km7U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

<script id="timestamps" type="application-json">[{"timestamp_with_hours":"0:5:20","description":"Use `geom_histogram` to visualize the distribution of episode ratings.","functions":"geom_histogram","packages":"ggplot","timestamp_sec":320},{"timestamp_with_hours":"0:6:30","description":"Use `geom_point` and `geom_line` with `color = factor(season)` to visualize the episode rating for every episode.","functions":"geom_point | geom_line","packages":"ggplot |","timestamp_sec":390},{"timestamp_with_hours":"0:7:15","description":"Use `group_by` and `summarize` to show the average rating for each season and the number of episodes in each season.","functions":"group_by | summarize","packages":"dplyr","timestamp_sec":435},{"timestamp_with_hours":"0:7:15","description":"Continuing from previous row:\n\nUse `geom_line` and `geom_point` with `size = n_episodes`  to visualize the average rating for each season with point size indicating the total number of episodes (larger = more episodes, smaller = fewer episodes).","functions":"geom_line | geom_point","packages":"ggplot","timestamp_sec":435},{"timestamp_with_hours":"0:10:55","description":"Use `fct_reorder`  to reorder the `episode_name` factor levels by sorting along the `episode_rating` variable.","functions":"fct_reorder","packages":"forcats","timestamp_sec":655},{"timestamp_with_hours":"0:10:55","description":"Use `geom_point` to visualize the top episodes by rating. \n\nUse the 'glue' package to place `season number` and `episode number` before episode name on the `y axis`.","functions":"gnemonol | arrange","packages":"gplot | dplyr | glue","timestamp_sec":655},{"timestamp_with_hours":"0:15:20","description":"Use `pivot_longer` to combine ingredients into one single column.\n\nUse `separate_rows` with `sep = \", \"`  to separate out the ingredients with each ingredient getting its own row.","functions":"pivot_longer | separate_rows","packages":"tidyr","timestamp_sec":920},{"timestamp_with_hours":"0:18:10","description":"Use `fct_lump`  to lump ingredients together except for the 10 most frequent.\n\nUse `fct_reorder` to reorder `ingredient` factor levels by sorting against `n`.","functions":"fct_lump | fct_reorder","packages":"forcats","timestamp_sec":1090},{"timestamp_with_hours":"0:18:10","description":"Use `geom_col` to create a stacked bar plot to visualize the most common ingredients by course.","functions":"geom_col","packages":"ggplot","timestamp_sec":1090},{"timestamp_with_hours":"0:19:45","description":"Use `fct_relevel`  to reorder `course` factor levels to appetizer, entree, dessert.","functions":"fct_relevel","packages":"forcats","timestamp_sec":1185},{"timestamp_with_hours":"0:21:00","description":"Use `fct_rev` and `scale_fill_discrete` with `guide = guide_legend(reverse = TRUE)` to reorder the segments within the stacked bar plot.","functions":"fct_rev | scale_fill_discrete","packages":"forcats | ggplot","timestamp_sec":1260},{"timestamp_with_hours":"0:23:20","description":"Use the `widyr` package and `pairwise_cor` to find out what ingredients appear together. \n\nMentioned: [David Robinson - The {widyr} Package YouTube Talk at 2020 R Conference](https://www.youtube.com/watch?v=mApnx5NJwQA)","functions":"add_count | distinct | pairwise_cor","packages":"widyr | dplyr","timestamp_sec":1400},{"timestamp_with_hours":"0:26:20","description":"Use `ggraph` , `geom_edge_link`, `geom_node_point`, `geom_node_text` to create an ingredient network diagram to show their makeup and how they interact.","functions":"ggraph | geom_edge_link | geom_node_point | geom_node_text","packages":"widyr | ggraph | tidygraph","timestamp_sec":1580},{"timestamp_with_hours":"0:28:00","description":"Use `pairwise_count` from `widyr` to count the number of times each pair of items appear together within a group defined by feature.","functions":"pairwise_count","packages":"widyr","timestamp_sec":1680},{"timestamp_with_hours":"0:30:15","description":"Use `unite` from the `tidyr` package in order to paste together the `episode_course` and `series_episode` columns into one column to figure out if any pairs of ingredients appear together in the same course across episodes.","functions":"unite | pairwise_count","packages":"tidyr | widyr","timestamp_sec":1815},{"timestamp_with_hours":"0:31:55","description":"Use `summarize` with `min`, `mean, `max`, and `n()` to create the `first_season`, `avg_season`, `last_season` and `n_appearances` variables.","functions":"summarize | min | mean | max","packages":"dplyr | base","timestamp_sec":1915},{"timestamp_with_hours":"0:34:35","description":"Use `slice` with `tail` to get the `n` ingredients that appear in early and late seasons.","functions":"slice | tail","packages":"dplyr | base","timestamp_sec":2075},{"timestamp_with_hours":"0:35:40","description":"Use `geom_boxplot` to visualize the distribution of each ingredient across all seasons.","functions":"semi_join | geom_boxplot | fct_reorder","packages":"dplyr | ggplot | forcats","timestamp_sec":2140},{"timestamp_with_hours":"0:36:50","description":"Fit predictive models (`linear regression` , `random forest`, and `natural spline`) to determine if episode rating is explained by the ingredients or season.\n\nUse `pivot_wider` with `values_fill = list(value = 0))` with 1 indicating ingredient was used and 0 indicating it wasn't used.","functions":"pivot_wider | lm | linear_reg | set_engine | fit | initial_split | training | plot | base | vfold_cv | fit_resamples | tune_grid | collect_metrics | geom_line | tidy | rand_forest | clean_names | step_ns | tune_grid  | collect_metrics | prep | juice","packages":"tidymodels | stats | rsample | ggplot | broom | parsnip | janitor","timestamp_sec":2210},{"timestamp_with_hours":"1:17:25","description":"Summary of screencast.","timestamp_sec":4645}]</script>
