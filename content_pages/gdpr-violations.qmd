---
title: |
  GDPR Violations
description: |
  Data manipulation, Interactive dashboard with `shinymetrics` and `tidymetrics`
date: 2020-04-20
date-format: long
---

Notable topics: Data manipulation, Interactive dashboard with `shinymetrics` and `tidymetrics`

Recorded on: 2020-04-20

Timestamps by: Eric Fletcher

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/gdpr.Rmd)

## Full screencast

<iframe class="video" src="https://www.youtube.com/embed/EVvnnWKO_4w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

<script id="timestamps" type="application-json">[{"timestamp_with_hours":"0:4:05","description":"Use the `mdy` function from the `lubridate` package to change  the date variable from `character` class to `date` class.","functions":"mdy","packages":"lubridate","timestamp_sec":245},{"timestamp_with_hours":"0:5:35","description":"Use the `rename` function from the `dplyr` package to rename variable in the dataset.","functions":"rename","packages":"dplyr","timestamp_sec":335},{"timestamp_with_hours":"0:6:15","description":"Use the `fct_reorder` function from the `forcats` package to  sort the `geom_col` in descending order.","functions":"fct_reorder","packages":"forcats","timestamp_sec":375},{"timestamp_with_hours":"0:6:30","description":"Use the `fct_lump` function from the `forcats` package within `count`  to  lump together  country names except for the 6 most frequent.","functions":"fct_lump | count","packages":"forcats | dplyr","timestamp_sec":390},{"timestamp_with_hours":"0:7:05","description":"Use the `scale_x_continuous` function from `ggplot2`  with the `scales` package to change the x-axis values to dollar format.","functions":"scale_x_continuous","packages":"ggplot2 | scales","timestamp_sec":425},{"timestamp_with_hours":"0:8:15","description":"Use the `month` and `floor_date`  function from the `lubridate` package to get the month component from the `date` variable to count the total fines per month.","functions":"month","packages":"lubridate","timestamp_sec":495},{"timestamp_with_hours":"0:8:55","description":"Use the `na_if` function from the `dplyr` package to convert specific date value to `NA`.","functions":"na_if","packages":"dplyr","timestamp_sec":535},{"timestamp_with_hours":"0:11:05","description":"Use the `fct_reorder` function from the `forcats` package to sort the stacked `geom_col` and legend labels in descending order.","functions":"fct_reorder","packages":"forcats | dplyr","timestamp_sec":665},{"timestamp_with_hours":"0:15:15","description":"Use the `dollar` function from the `scales` package to convert the `price` variable into dollar format.","functions":"dollar","packages":"scales","timestamp_sec":915},{"timestamp_with_hours":"0:15:40","description":"Use the `str_trunc` to shorten the `summary` string values to 140 characters.","functions":"str_trunc","packages":"stringr","timestamp_sec":940},{"timestamp_with_hours":"0:17:35","description":"Use the `separate_rows` function from the `tidyr` package with a `regular expression` to separate the values in the `article_violated` variable with each matching group placed in its own row.","functions":"separate_rows","packages":"tidyr","timestamp_sec":1055},{"timestamp_with_hours":"0:19:30","description":"Use the `extract` function from the `tidyr` package with a `regular expression` to turn each matching group into a new column.","functions":"extract","packages":"tidyr","timestamp_sec":1170},{"timestamp_with_hours":"0:27:30","description":"Use the `geom_jitter` function from the `ggplot2` package to add points to the horizontal box plot.","functions":"geom_jitter","packages":"ggplot2","timestamp_sec":1650},{"timestamp_with_hours":"0:31:55","description":"Use the `inner_join` function from the `dplyr` package to join together  `article_titles` and `separated_articles` tables.","functions":"inner_join","packages":"dplyr","timestamp_sec":1915},{"timestamp_with_hours":"0:32:55","description":"Use the `paste0` function from `base R` to concatenate `article` and `article_title`.","functions":"paste0","packages":"base R","timestamp_sec":1975},{"timestamp_with_hours":"0:38:48","description":"Use the `str_detect` function from the `stringr` package to detect the presence of a pattern in a string.","functions":"str_detect","packages":"stringr","timestamp_sec":2328},{"timestamp_with_hours":"0:40:25","description":"Use the `group_by` and `summarize` functions from the `dplyr` package to aggregate fines that were issued to the same country on the same day allowing for size to be used in `geom_point` plot.","functions":"group_by | summarize | geom_point","packages":"dplyr | ggplot2","timestamp_sec":2425},{"timestamp_with_hours":"0:41:14","description":"Use the `scale_size_continuous` function from the `ggplot2` package to remove the size legend.","functions":"ggplot2","packages":"ggplot2","timestamp_sec":2474},{"timestamp_with_hours":"0:42:55","description":"Create an interactive dashboard using the `shinymetrics` and `tidymetrics` which is [a tidy approach to business intelligence](https://github.com/datacamp/tidymetrics).","functions":"preview_metric","packages":"tidymetrics | shinymetrics","timestamp_sec":2575},{"timestamp_with_hours":"0:47:25","description":"Use the `cross_by_dimensions` and `cross_by_periods` functions from the `tidyr` package which stacks an extra copy of the table for each dimension specified as an argument (`country`, `article_title`, `type`), replaces the value of the column with the word `All` and `periods`, and groups by all the columns. It acts as an extended group_by that allows complete summaries across each individual dimension and possible combinations.","functions":"cross_by_dimensions | cross_by_periods | use_metrics_scaffold | create_metrics","packages":"tidyr","timestamp_sec":2845}]</script>
