---
title: "Kenya Census"
description: "Heatmap, Joining Datasets, ShapeFile, Choropleth Map, rKenyaCensus"
date: 2021-01-19
date-format: long
---

Notable topics: Heatmap, Joining Datasets, ShapeFile, Choropleth Map, rKenyaCensus

Recorded on: 2021-01-19

Timestamps by: Eric Fletcher

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/2021_01_19_kenya_census.Rmd)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:2:15

Trim whitespace from a string.

str_trim

stringr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=135" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:4:35

Reorder factor levels by sorting along another variable by sum.

fct_reorder

forcats



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=275" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:5:00

Label x axis numbers in decimal format (e.g. 0.12, 1,234).

comma | scale_x_continuous

scales | ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=300" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:5:15

Pivot data from wide to long.

gather

tidyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=315" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:5:25

Convert case of a string to title case.

str_to_title

stringr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=325" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:6:50

Add text labels to the `geom_point` plot.

geom_text

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=410" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:7:35

Add horizontal reference line to `geom_point` plot.

geom_hline

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=455" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:7:35

Label y axis numbers in percent format.

comma | scale_y_continuous

scales | ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=455" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:9:00

Expand the plot axis limits by having the y axis begin at 0.

expand_limits

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=540" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:9:10

Position x axis data on a log10 scale.

scale_x_log10

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=550" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:10:20

Pivot data from wide to long.

gather

tidyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=620" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:11:15

Convert case of a string to title case.

str_to_title

stringr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=675" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:11:50

Reorder factor levels by sorting along another variable by sum.

fct_reorder

forcats



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=710" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:14:45

Create a heatmap.

geom_tile

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=885" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:15:13

Complete a data frame with missing combinations of data.

complete

tidyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=913" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:15:30

Rotate x axis labels 90 degrees.

theme

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=930" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:16:55

Join two datasets while including all rows in x or y.

full_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1015" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:18:00

Replace matched patterns in a string using `str_replace_all` with the `regular expression` `([a-z])([A-Z])` and `"\\1 \\2"` to separate words that were joined together (e.g. TanaRiver, Tana River).

str_replace_all

stringr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1080" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:19:40

Join two datasets while returning all rows from x without a match in y.

anti_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1180" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:19:40

Join two datasets while including all rows in y.

right_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1180" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:19:40

Join two datasets while including all rows in x and y.

inner_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1180" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:27:35

Import and basic exploration of the `rKenyaCensus` package shapefiles.

KenyaCounties_SHP

rKenyaCensus



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1655" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:28:15

Create a map using the `rKenyaCensus` shapefile data.

st_as_sf | geom_sf

ggplot2 | sf



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=1695" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:35:00

Simplify the shapefile data to make for faster processesing.

st_simplify

sf



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=2100" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:36:20

Join two datasets while including all rows in x.

left_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=2180" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:37:25

Create a choropleth map - TROUBLSHOOTING through 41:45.

ggplot | geom_sf | theme_map

ggplot2 | sf



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=2245" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:43:20

Create a flexible function that generates `geom_col` plots used for for exploring the many different datasets in the `rKenyaCensus` package.

filter | gather | mutate | group_by | summarize | spread | select

ggplot2 | dplyr | tidyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=2600" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:51:55

Lump together factor levels into "other".

fct_lump

forcats



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=3115" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:59:20

Summary of screencast.

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/dM_0zjj4TtM?start=3560" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

