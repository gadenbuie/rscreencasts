---
title: |
  Riddler: Monte Carlo Simulation
description: |
  Simulation
date: 2018-12-03
date-format: long
---

Notable topics: Simulation

Recorded on: 2018-12-03

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/riddler-die-reroll.Rmd)

## Full screencast

<iframe class="video" src="https://www.youtube.com/embed/pBGMt28xgvk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

<script id="timestamps" type="application-json">[{"timestamp_with_hours":"0:3:10","description":"Using crossing function to set up structure of simulation (1,000 trials, each with 12 chess games)","functions":"crossing","timestamp_sec":190},{"timestamp_with_hours":"0:4:00","description":"Adding result to the tidy simulation dataset","timestamp_sec":240},{"timestamp_with_hours":"0:6:45","description":"Using sample function to simulate win/loss/draw for each game (good explanation of individual arguments within sample)","functions":"sample","timestamp_sec":405},{"timestamp_with_hours":"0:7:05","description":"Using group_by and summarise to get total points for each trial","functions":"group_by | summarise","timestamp_sec":425},{"timestamp_with_hours":"0:8:10","description":"Adding red vertical reference line to histogram to know when a player wins a matchup","timestamp_sec":490},{"timestamp_with_hours":"0:10:00","description":"Answering second piece of riddle (how many games would need to be played for better player to win 90% or 99% of the time?)","timestamp_sec":600},{"timestamp_with_hours":"0:10:50","description":"Using unnest and seq_len function to create groups of number of games (20, 40, …, 100), each with one game per row","functions":"unnest | seq_len","timestamp_sec":650},{"timestamp_with_hours":"0:12:15","description":"Creating a win field based on the simulated data, then summarising win percentage for each group of number of games (20, 40, …, 100)","timestamp_sec":735},{"timestamp_with_hours":"0:13:55","description":"Using seq function to create groups of number of games programmatically","functions":"seq","timestamp_sec":835},{"timestamp_with_hours":"0:15:05","description":"Explanation of using logarithmic scale for this riddle","timestamp_sec":905},{"timestamp_with_hours":"0:15:45","description":"Changing spacing of number of games from even spacing (20, 40, …, 100) to exponential (doubles every time, 12, 24, 48, …, 1536)","timestamp_sec":945},{"timestamp_with_hours":"0:18:00","description":"Changing spacing of number of games to be finer","timestamp_sec":1080},{"timestamp_with_hours":"0:19:00","description":"Introduction of interpolation as the last step we will do","timestamp_sec":1140},{"timestamp_with_hours":"0:19:30","description":"Introducing approx function as method to linearly interpolate data","functions":"approx","timestamp_sec":1170},{"timestamp_with_hours":"0:22:35","description":"Break point for the next riddle","timestamp_sec":1355},{"timestamp_with_hours":"0:24:30","description":"Starting recursive approach to this riddle","timestamp_sec":1470},{"timestamp_with_hours":"0:25:35","description":"Setting up a N x N matrix (N = 4 to start)","functions":"matrix","timestamp_sec":1535},{"timestamp_with_hours":"0:25:55","description":"Explanation of approach (random ball goes into random cup, represented by matrix)","timestamp_sec":1555},{"timestamp_with_hours":"0:26:25","description":"Using sample function to pick a random element of the matrix","functions":"sample","timestamp_sec":1585},{"timestamp_with_hours":"0:27:15","description":"Using for loop to iterate random selection 100 times","timestamp_sec":1635},{"timestamp_with_hours":"0:28:25","description":"Converting for loop to while loop, using colSums to keep track of number of balls in cups","timestamp_sec":1705},{"timestamp_with_hours":"0:30:05","description":"Starting to code the pruning phase","timestamp_sec":1805},{"timestamp_with_hours":"0:30:15","description":"Using diag function to pick matching matrix elements (e.g., the 4th row of the 4th column)","timestamp_sec":1815},{"timestamp_with_hours":"0:31:50","description":"Turning code up to this point into a custom simulate_round function","timestamp_sec":1910},{"timestamp_with_hours":"0:32:25","description":"Using custom simulate_round function to simulate 100 rounds","timestamp_sec":1945},{"timestamp_with_hours":"0:33:30","description":"Using all function to perform logic check on whether all cups in a round are not empty","functions":"all","timestamp_sec":2010},{"timestamp_with_hours":"0:34:05","description":"Converting loop approach to tidy approach","timestamp_sec":2045},{"timestamp_with_hours":"0:35:10","description":"Using rerun and map_lgl functions from purrr package to simulate a round for each for in a dataframe","functions":"rerun | map_lgl","timestamp_sec":2110},{"timestamp_with_hours":"0:36:20","description":"Explanation of the tidy approach","timestamp_sec":2180},{"timestamp_with_hours":"0:37:05","description":"Using cumsum and lag functions to keep track of the number of rounds until you win a \"game\"","functions":"cumsum | lag","timestamp_sec":2225},{"timestamp_with_hours":"0:39:45","description":"Creating histogram of number of rounds until winning a game","timestamp_sec":2385},{"timestamp_with_hours":"0:40:10","description":"Setting boundary argument of geom_histogram function to include count of zeros","timestamp_sec":2410},{"timestamp_with_hours":"0:40:30","description":"Brief explanation of geometric distribution","timestamp_sec":2430},{"timestamp_with_hours":"0:41:25","description":"Extending custom simulate_round function to include number of balls thrown to win (in addition to whether we won a round)","timestamp_sec":2485},{"timestamp_with_hours":"0:46:10","description":"Extending to two values of N (N = 3 or N = 4)","timestamp_sec":2770},{"timestamp_with_hours":"0:49:50","description":"Reviewing results of N = 3 and N = 4","timestamp_sec":2990},{"timestamp_with_hours":"0:52:20","description":"Extending to N = 5","timestamp_sec":3140},{"timestamp_with_hours":"0:53:55","description":"Checking results of chess riddle with Riddler solution","timestamp_sec":3235},{"timestamp_with_hours":"0:55:10","description":"Checking results of ball-cup riddle with Riddler solution (Dave slightly misinterpreted what the riddle was asking)","timestamp_sec":3310},{"timestamp_with_hours":"0:56:35","description":"Changing simulation code to correct the misinterpretation","timestamp_sec":3395},{"timestamp_with_hours":"1:01:40","description":"Reviewing results of corrected simulation","timestamp_sec":3700},{"timestamp_with_hours":"1:03:30","description":"Checking results of ball-cup riddle with corrected simulation with Riddler solutions","timestamp_sec":3810},{"timestamp_with_hours":"1:06:00","description":"Visualizing number of balls thrown and rounds played","timestamp_sec":3960}]</script>
