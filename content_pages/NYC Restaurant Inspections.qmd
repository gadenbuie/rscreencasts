---
title: "NYC Restaurant Inspections"
description: "Multiple t-test models (broom package), Principal Component Analysis (PCA)"
date: 2018-12-11
date-format: long
---

Notable topics: Multiple t-test models (broom package), Principal Component Analysis (PCA)

Recorded on: 2018-12-11

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/nyc-restaurants.Rmd)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:18:45

Separating column using separate function

separate

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=1125" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:21:15

Taking distinct observation, but keeping the remaining variables using distinct function with .keep_all argument

distinct

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=1275" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:25:00

Using broom package and nest function to perform multiple t-tests at the same time

nest | t.test

broom



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=1500" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:26:20

Tidying nested t-test models using broom package

NA

broom



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=1580" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:27:00

Creating TIE fighter plot of estimates of means and their confidence intervals

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=1620" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:28:45

Recode long description using regex to remove everything after a parenthesis

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=1725" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:33:45

Using cut function to manually bin data along user-specified intervals

cut

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=2025" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:42:00

Asking, "What type of violations tend to occur more in some cuisines than others?"

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=2520" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:42:45

Using semi_join function to get the most recent inspection of all the restaurants

semi_join

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=2565" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:52:00

Asking, "What violations tend to occur together?"

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3120" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:53:00

Using widyr package function pairwise_cor (pairwise correlation) to find co-occurrence of violation types

pairwise_cor

widyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3180" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:55:30

Beginning of PCA (Principal Component Analysis) using widely_svd function

widely_svd

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3330" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:58:00

Actually typing in the widely_svd function

widely_svd

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3480" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:58:15

Reviewing and explaining output of widely_svd function

widely_svd

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3495" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 1:01:30

Creating graph of opposing elements of a PCA dimension

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3690" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 1:02:00

Shortening string using str_sub function

str_sub

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3720" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 1:04:00

Reference to Julia Silge's PCA walkthrough using StackOverflow data: https://juliasilge.com/blog/stack-overflow-pca/

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/em4FXPf4H-Y?start=3840" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

