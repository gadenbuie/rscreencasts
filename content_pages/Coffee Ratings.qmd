---
title: "Coffee Ratings"
description: "Ridgeline plot, Pairwise correlation, Network plot, Singular value decomposition, Linear model"
date: 2020-07-07
date-format: long
---

Notable topics: Ridgeline plot, Pairwise correlation, Network plot, Singular value decomposition, Linear model

Recorded on: 2020-07-07

Timestamps by: Eric Fletcher

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/coffee-ratings.Rmd)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:08:15

Using `fct_lump` within `count` and then `mutate` to lump the variety of coffee together except for the most frequent

count | mutate | fct_lump

forcats



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=495" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:08:50

Create a `geom_boxplot` to visualize the variety and the distribution of `total_cup_points`

geom_boxplot

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=530" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:09:55

Create a `geom_histogram`  to visualize the variety and the distribution of `total_cup_points`

geom_histogram

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=595" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:11:40

Using `fct_reorder` to reorder `variety` by sorting it along `total_cup_points` in ascending order

fct_reorder

fct_reorder



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=700" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:12:35

Using `summarize` with `across` to calculate the percent of missing data (NA) for each rating variable

summarize | across

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=755" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:15:20

Create a bar chart using `geom_col` with `fct_lump` to visualize the frequency of top countries

geom_col | fct_lump

ggplot2 | forcats



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=920" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:20:35

Using `pivot_longer` to pivot the rating metrics for wide format to long format

pivot_longer

tidyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1235" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:21:30

Create a `geom_line` chart to see if the `sum` of the rating categories equal to the `total_cup_points` column

geom_line

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1290" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:23:10

Create a `geom_density_ridges` chart to show the distribution of ratings across each rating metric

geom_density_ridges

ggridges



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1390" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:24:35

Using `summarize` with `mean` and `sd` to show the average rating per metric with its standard deviation

summarize

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1475" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:26:15

Using `pairwise_cor` to find correlations amongst the rating metrics

pairwise_cor

widyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1575" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:27:20

Create a `network plot` to show the clustering of the rating metrics

graph_from_data_frame  | ggraph | geom_edge_link | geom_node_point  | geom_node_text

ggraph | igraph



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1640" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:29:35

Using `widely_svd` to visualize the biggest source of variation with the rating metrics (Singular value decomposition)

widely_svd | geom_col | reorder_within | scale_y_reordered

widyr | tidytext



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=1775" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:37:40

Create a `geom_histogram` to visualize the distribution of altitude

geom_histogram

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=2260" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:40:20

Using `pmin` to set a maximum numeric altitude value of 3000

pmin

base



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=2420" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:41:05

Create a `geom-point` chart to visualize the correlation between altitude and quality (`total_cup_points`)

geom_point | geom_smooth

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=2465" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:42:00

Using `summarize` with `cor` to show the correlation between altitude and each rating metric

summarize | cor

dplyr | stats



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=2520" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:44:25

Create a linear model `lm` for each rating metric then visualize the results using a `geom_line` chart to show how each kilometer of altitude contributes to the score

lm | geom_point | tidy | map | geom_errorbarh

stats | broom | purrr | ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=2665" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:50:35

Summary of screencast

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/-1x8Kpyndss?start=3035" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

