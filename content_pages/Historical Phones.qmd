---
title: "Historical Phones"
description: "Joining tables, Animated world choropleth, Adding IQR to geom_line, World development indicators package"
date: 2020-11-10
date-format: long
---

Notable topics: Joining tables, Animated world choropleth, Adding IQR to geom_line, World development indicators package

Recorded on: 2020-11-10

Timestamps by: Eric Fletcher

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/2020_11_10_phone_history.Rmd)

## Full screencast
<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:2:15

Use `bind_rows` from the `dplyr` package to combine the two data sets.

bind_rows

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=135" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:7:30

Use `group = interaction(type, country)` within `ggplot` `aes()` to set the interaction `type` with every single `country` on one plot.

ggplot | group

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=450" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:9:30

Use `semi_join` from the `dplyr` package to join rows from `phones` with a match in `country_sizes`.

semi_join | top_n

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=570" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:14:00

Use `quantile` from the `stats` package within `summarize` to show the 25th, and 75th quantiles (interquartile range) on the plot.

quantile | geom_ribbon

stats | ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=840" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:17:50

Import the `wdi` package (World Development Indicators from the World Bank) with `extra = TRUE` in order to get the `iso3c` code and `income` level for each country.

WDI | select

WDI | dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=1070" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:19:45

Use `inner_join` from the `dplyr` package to join the `WDI` data with the `phones` data.

inner_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=1185" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:20:35

Use `fct_relevel` from the `forcats` package to reorder `income` factor levels in ascending order.

fct_relevel

forcats



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=1235" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:21:05

Create an `anonymous function` using `.` (dot).

.

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=1265" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:29:30

Use `inner_join` from the `dplyr` package to join the `mobile` data and `landline` data together with a `geom_abline` to see how different the total populations are between the two datasets.

inner_join | geom_abline

dplyr | ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=1770" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:31:00

Use `geom_hline` to add a refrence line to the plot shwoing when each country crossed the 50 per 100 subscription mark.

geom_hline

ggplot2



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=1860" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:35:20

Use `summarize` from the `dplyr` package with `min(year([Mobile >= 50]))` to find the year in which each country crossed the 50 per 100 subscription mark.

summarize | min

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2120" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:35:20

Use `summarize` from the `dplyr` package with `max(Mobile)` to find the peak number of mobile subscriptions per country.

summarize | max

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2120" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:35:20

Use `na_if` from the `dplyr` package within `summarize` to change `Inf` to `NA`.

na_if | summarize

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2120" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:38:20

Using the `WDIsearch` function to search the `WDI` package for proper GDP per capita indicator. Ended up using the `NY.GDP.PCAP.PP.KD` indicator.

WDIsearch

WDI



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2300" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:39:05

Adding the `GDP` data from the `WDI` package to the `country_incomes` table.

WDI | select

WDI | dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2345" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:39:52

Using the `inner_join` function from the `dplyr` package to join the `phones` table with the `country_incomes` table pulling in the `gdp_per_capita` variable.

inner_join

dplyr



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2392" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:42:25

Using the `WDIsearch` function to search the `WDI` package for proper population indicator. Ended up using the `SP.POP.TOTL` indicator.

WDIsearch

WDI



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=2545" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:50:00

Create an animated choropleth world map with `fill = subscriptions`.

map_data | iso3166 | regex_left_join | left_join | transition_manual

maps | ggplot2 | fuzzyjoin | gganimate



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=3000" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 1:00:00

Summary of screencast

NA

NA



<iframe width="560" height="315" src="https://www.youtube.com/embed/pJPqAIb8MKA?start=3600" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

