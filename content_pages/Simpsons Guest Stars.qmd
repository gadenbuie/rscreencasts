---
title: "Simpsons Guest Stars"
description: "Text mining (tidytext package)"
date: 2019-08-30
date-format: long
---

Notable topics: Text mining (tidytext package)

Recorded on: 2019-08-30

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/simpsons-guests.Rmd)

## Full screencast
<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

### 0:4:15

Using str_detect function to find guests that played themselves

str_detect

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=255" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:7:55

Using separate_rows function and regex to get delimited values onto different rows (e.g., "Edna Krabappel; Ms. Melon" gets split into two rows)

separate_rows

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=475" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:9:55

Using parse_number function to convert a numeric variable coded as character to a proper numeric variable

parse_number

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=595" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:14:45

Downloading and importing supplementary dataset of dialogue

NA

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=885" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:16:10

Using semi_join function to filter dataframe based on values that appear in another dataframe

semi_join

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=970" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:18:05

Using anti_join function to check which values in a dataframe do not appear in another dataframe

anti_join

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=1085" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:20:50

Using ifelse function to recode a single value with another (i.e., "Edna Krapabbel" becomes "Edna Krabappel-Flanders")

ifelse

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=1250" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:26:20

Explaining the goal of all the data cleaning steps

NA

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=1580" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:31:25

Using sample function to get an example line for each character

sample

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=1885" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:33:20

Setting geom_histogram function's binwidth and center arguments to get specific bin sizes

geom_histogram

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=2000" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:37:25

Using unnest_tokens and anti_join functions from tidytext package to split dialogue into individual words and remove stop words (e.g., "the", "or", "and")

unnest_tokens | anti_join

tidytext



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=2245" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:38:55

Using bind_tf_idf function from tidytext package to get the TF-IDF (term frequency-inverse document frequency) of individual words

bind_tf_idf

tidytext



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=2335" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:42:50

Using top_n function to get the top 1 TF-IDF value for each role

top_n

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=2570" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:44:05

Using paste0 function to combine two character variables (e.g., "Groundskeeper Willie" and "ach" (separate variables) become "Groundskeeper Willie: ach")

paste0

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=2645" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:48:10

Explanation of what TF-IDF (text frequency-inverse document frequency) tells us and how it is a "catchphrase detector"

NA

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=2890" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### 0:56:40

Summary of screencast

NA

NA



<iframe class="video" src="https://www.youtube.com/embed/EYuuAGDeGrQ?start=3400" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

