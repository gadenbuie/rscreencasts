---
title: |
  Tour de France
description: |
  Survival analysis, Animated bar graph (gganimate package)
date: 2020-04-06
date-format: long
---

Notable topics: Survival analysis, Animated bar graph (gganimate package)

Recorded on: 2020-04-06

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/tour-de-france.Rmd)

## Full screencast

<iframe class="video" src="https://www.youtube.com/embed/vT-DElIaKtE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Timestamps

<script id="timestamps" type="application-json">[{"timestamp_with_hours":"0:3:55","description":"Getting an overview of the data","timestamp_sec":235},{"timestamp_with_hours":"0:8:55","description":"Aggregating data into decades using the truncated division operator %/%","functions":"%/%","timestamp_sec":535},{"timestamp_with_hours":"0:21:50","description":"Noting that death data is right-censored (i.e., some winners are still alive)","timestamp_sec":1310},{"timestamp_with_hours":"0:24:05","description":"Using transmute function, which combines functionality of mutate (to create new variables) and select (to choose variables to keep)","functions":"transmute","timestamp_sec":1445},{"timestamp_with_hours":"0:25:30","description":"Using survfit function from survival package to conduct survival analysis","functions":"survfit","packages":"survival","timestamp_sec":1530},{"timestamp_with_hours":"0:27:30","description":"Using glance function from broom package to get a one-row model summary of the survival model","functions":"glance","packages":"broom","timestamp_sec":1650},{"timestamp_with_hours":"0:31:00","description":"Using extract function to pull out a string matching a regular expression from a variable (stage number in this case)","functions":"extract","timestamp_sec":1860},{"timestamp_with_hours":"0:34:30","description":"Theorizing that there is a parsing issue with the original data's time field","timestamp_sec":2070},{"timestamp_with_hours":"0:41:15","description":"Using group_by function's built-in \"peeling\" feature, where a summarise call will \"peel away\" one group but left other groupings intact","functions":"group_by","timestamp_sec":2475},{"timestamp_with_hours":"0:42:05","description":"Using rank function, then upgrading to percent_rank function to give percentile rankings (between 0 and 1)","functions":"rank | percent_rank","timestamp_sec":2525},{"timestamp_with_hours":"0:47:50","description":"Using geom_smooth function with method argument as \"lm\" to plot a linear regression","functions":"geom_smooth","timestamp_sec":2870},{"timestamp_with_hours":"0:48:10","description":"Using cut function to bin numbers (percentiles in this case) into categories","functions":"cut","timestamp_sec":2890},{"timestamp_with_hours":"0:50:25","description":"Reviewing boxplots exploring relationship between first-stage performance and overall Tour performance","timestamp_sec":3025},{"timestamp_with_hours":"0:51:30","description":"Starting to create an animation using gganimate package","packages":"gganimate","timestamp_sec":3090},{"timestamp_with_hours":"0:56:00","description":"Actually writing the code to create the animation","timestamp_sec":3360},{"timestamp_with_hours":"0:58:20","description":"Using reorder_within function from tidytext package to re-order factors that have the same name across multiple groups","functions":"reorder_within","packages":"tidytext","timestamp_sec":3500},{"timestamp_with_hours":"1:02:40","description":"Summary of screencast","timestamp_sec":3760}]</script>
